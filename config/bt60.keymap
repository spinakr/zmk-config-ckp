#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
	macros {
        eurkey_ae: eurkey_ae {
            label = "eurkey_ae";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
				, <&macro_press &kp RALT>
                , <&macro_tap &kp Q>
                , <&macro_release &kp RALT>
                ;
        };
        eurkey_aa: eurkey_aa {
            label = "eurkey_aa";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
				, <&macro_press &kp RALT>
                , <&macro_tap &kp W>
                , <&macro_release &kp RALT>
                ;
        };
        eurkey_oe: eurkey_oe {
            label = "eurkey_oe";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
				, <&macro_press &kp RALT>
                , <&macro_tap &kp L>
                , <&macro_release &kp RALT>
                ;
        };
        norwerty_bracket_left: norwerty_bracket_left {
            label = "norwerty_bracket_left";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
                = <&macro_press &kp LSHFT>
				, <&macro_press &kp LALT>
                , <&macro_tap &kp LBKT>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LALT>
                ;
        };
        norwerty_bracket_right: norwerty_bracket_right {
            label = "norwerty_bracket_right";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
                = <&macro_press &kp LSHFT>
				, <&macro_press &kp LALT>
                , <&macro_tap &kp RBKT>
                , <&macro_release &kp LSHFT>
                , <&macro_release &kp LALT>
                ;
        };
        norwerty_semi_colon: norwerty_semi_colon {
            label = "norwerty_semi_colon";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
				= <&macro_press &kp LALT>
                , <&macro_tap &kp SEMI>
                , <&macro_release &kp LALT>
                ;
        };
        vim_word_move: vim_word_move {
            label = "vim_word_move";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
                = <&macro_press &kp RALT>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp RALT>
                ;
        };
        vim_word_move_back: vim_word_move_back {
            label = "vim_word_move_back";
            compatible = "zmk,behavior-macro";
			#binding-cells = <0>;
			wait-ms = <0>;
			tap-ms = <0>;
            bindings
                = <&macro_press &kp RALT>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp RALT>
                ;
        };
    };
	keymap {
		compatible = "zmk,keymap";

		default_layer {
				// ------------------------------------------------------------------------------------------
				// |  `  |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP
				// | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   |
				// | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER
				// |  SHIFT    |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  | /   |      SHIFT
				// |  CTL  |  ALT  |  WIN  |            SPACE               | WIN | ALT    |  1    |  CTRL
				// ------------------------------------------------------------------------------------------
			bindings = <
				&lt 2 ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp  N8   &kp  N9 &kp  N0  &kp MINUS &kp EQUAL &kp BSPC
				&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp  I    &kp  O  &kp  P   &kp LBKT &kp RBKT   &kp BSLH
				&ht_hp mo(1) tog(3)    &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp  K    &kp  L  &kp SEMI &kp SQT            &kp RET
				&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH                   &kp RSHFT
				&kp LCTRL &kp LALT &kp     LGUI     &kp       SPACE                        &kp LGUI &kp RALT &mo 1       &kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		raise {
			bindings = <
				&kp ESC &kp F1 &kp F2 &kp F3 &kp F4 &kp F5 &kp F6 &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12 &kp DEL
				&trans &trans &vim_word_move &trans &trans &trans &trans &trans &trans &trans &trans &norwerty_bracket_left &norwerty_bracket_right &trans
				&trans    &trans &trans &trans &trans &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &norwerty_semi_colon  &trans   &bootloader
				&kp LSHFT &trans &trans &trans &trans &vim_word_move_back &trans &trans &trans &trans &trans  &kp LSHFT
				&kp LCTRL &kp RALT  &trans              &trans                            &trans   &kp LALT   &trans &kp RCTRL
			>;
			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
		technical {
			bindings = <
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &rgb_ug RGB_TOG
				&trans &trans &trans &trans &trans &trans &trans  &trans &trans  &trans &trans &trans   &bootloader
				&bl BL_TOG   &trans &trans &trans &bl BL_INC &bl BL_DEC &trans &trans &trans &trans &trans       &bl BL_TOG
				&trans &bt BT_PRV &bt BT_NXT             &trans                          &bt BT_CLR  &reset  &trans &trans
			>;
		};
		norwegian {
			bindings = <
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans
				&trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans &eurkey_aa &trans &trans
				&trans &trans &trans &trans &trans &trans &trans  &trans &trans  &trans &eurkey_oe &eurkey_ae   &trans
				&trans   &trans &trans &trans &trans &trans &trans &trans &trans &trans &trans       &trans
				&trans &trans &trans             &trans                          &trans  &trans  &trans &trans
			>;
		};
	};
};